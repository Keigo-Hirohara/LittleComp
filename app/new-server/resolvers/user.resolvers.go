package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.41

import (
	"context"
	"new-server/graph"
	"new-server/graph/model"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input model.CreateUserInput) (*model.User, error) {
	result := r.DB.Create(&model.User{
		Username: input.Username,
		Email:    input.Email,
		Password: input.Password,
	})

	if result.Error != nil {
		return nil, result.Error
	}

	var getUserResult model.User

	r.DB.Table("users").Where("username = ?", input.Username).First(&getUserResult)

	return &getUserResult, nil
}

// Mutation returns graph.MutationResolver implementation.
func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
